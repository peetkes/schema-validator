buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        //Needed for CorbTask to dynamically generate properties from CoRB Options class
        classpath "com.marklogic:marklogic-corb:${corbVersion}"
    }
}

plugins {
  id "net.saliman.properties" version "1.5.1"
  id "com.marklogic.ml-gradle" version "4.5.2"
}

repositories {
    mavenCentral()
}

configurations {
    // This configuration captures the dependencies for running CoRB (Content Reprocessing in Bulk).
    // This is only needed if you want to run corb via Gradle tasks.
    // If you do, using com.marklogic.gradle.task.CorbTask is a useful starting point, as shown below.
    corb {
        attributes {
            attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
        }
    }
}

dependencies {
    // required to run CoRB2
    corb "com.marklogic:marklogic-corb:${corbVersion}"
    corb "com.marklogic:marklogic-xcc:${mlVersion}"
    // optional
    //corb 'org.jasypt:jasypt:1.9.2' // would be necessary to leverage JasyptDecrypter
}

ext {
    // XCC URL for running corb task below
    contentXccUrl = "xcc://${mlUsername}:${mlPassword}@${mlHost}:${mlRestPort}"
}

task processSchemas(type: com.marklogic.gradle.task.CorbTask) {
    xccConnectionUri = contentXccUrl
    moduleRoot = "/corb/schema"
    urisModule = "uris.xqy"
    processModule = "transform.xqy"
}

mlLoadData.finalizedBy processSchemas
//mlPostDeploy.finalizedBy processSchemas